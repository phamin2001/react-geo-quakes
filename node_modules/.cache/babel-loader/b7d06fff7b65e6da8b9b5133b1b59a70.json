{"ast":null,"code":"import _regeneratorRuntime from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminpahlavani/Documents/General Assembly/WDI/Week7/Labs/02:06:2019/react-geo-quakes/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from './MapContainer';\nimport QuakesList from './QuakesList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.getQuakes =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var url, quakes, quakesJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              url = 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2019-02-20&endtime=2019-02-20T01:30:00';\n              _context.next = 4;\n              return fetch(url);\n\n            case 4:\n              quakes = _context.sent;\n\n              if (quakes.ok) {\n                _context.next = 7;\n                break;\n              }\n\n              throw Error(quakes.statusText);\n\n            case 7:\n              console.log(quakes, 'json quakes');\n              _context.next = 10;\n              return quakes.json();\n\n            case 10:\n              quakesJson = _context.sent;\n              console.log(quakesJson, 'parsed quakes');\n              return _context.abrupt(\"return\", quakesJson);\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0, 'error in catch block');\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.state = {\n      quakes: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getQuakes().then(function (data) {\n        _this2.setState({\n          quakes: data,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(MapContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"quakeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Earthquakes from the past week: \"), this.state.loading ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Data Is Loading ...\") : React.createElement(QuakesList, {\n        quakes: this.state.quakes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aminpahlavani/Documents/General Assembly/WDI/Week7/Labs/02:06:2019/react-geo-quakes/src/App.js"],"names":["React","Component","MapContainer","QuakesList","App","getQuakes","url","fetch","quakes","ok","Error","statusText","console","log","json","quakesJson","state","loading","then","data","setState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,G;;;;;AAEJ,iBAAa;AAAA;;AAAA;;AACX;AADW,UASfC,SATe;AAAA;AAAA;AAAA;AAAA,6BASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,cAAAA,GAFA,GAEM,kHAFN;AAAA;AAAA,qBAIiBC,KAAK,CAACD,GAAD,CAJtB;;AAAA;AAIEE,cAAAA,MAJF;;AAAA,kBAKAA,MAAM,CAACC,EALP;AAAA;AAAA;AAAA;;AAAA,oBAMMC,KAAK,CAACF,MAAM,CAACG,UAAR,CANX;;AAAA;AAQJC,cAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoB,aAApB;AARI;AAAA,qBASqBA,MAAM,CAACM,IAAP,EATrB;;AAAA;AASEC,cAAAA,UATF;AAUJH,cAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ,EAAwB,eAAxB;AAVI,+CAWGA,UAXH;;AAAA;AAAA;AAAA;AAaJH,cAAAA,OAAO,CAACC,GAAR,cAAgB,sBAAhB;AAbI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATG;AAGX,UAAKG,KAAL,GAAW;AACPR,MAAAA,MAAM,EAAC,EADA;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAX;AAHW;AAOd;;;;wCAoBkB;AAAA;;AACf,WAAKZ,SAAL,GAAiBa,IAAjB,CAAsB,UAACC,IAAD,EAAU;AAC5B,QAAA,MAAI,CAACC,QAAL,CAAc;AACVZ,UAAAA,MAAM,EAAEW,IADE;AAEVF,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIH,OALD;AAMH;;;6BAGU;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEG,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAArB,GAAwD,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWR,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF3D,CAJF,CADF;AAWD;;;;EAnDeP,S;;AAsDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport MapContainer from './MapContainer';\nimport QuakesList from './QuakesList';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state={\n        quakes:[],\n        loading: true\n    }\n}\n\ngetQuakes = async () => {\n    try {\n        let url = 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2019-02-20&endtime=2019-02-20T01:30:00';\n\n        const quakes = await fetch(url);\n        if(!quakes.ok){\n            throw Error(quakes.statusText);\n        }\n        console.log(quakes, 'json quakes');\n        const quakesJson = await quakes.json();\n        console.log(quakesJson, 'parsed quakes');\n        return quakesJson;        \n    } catch (err) {\n        console.log(err,'error in catch block');\n        return err;        \n    }\n}\n\ncomponentDidMount(){\n    this.getQuakes().then((data) => {\n        this.setState({\n            quakes: data,\n            loading: false\n        })\n    })\n}\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"mapContainer\">\n          <MapContainer  />\n        </div>\n        <div className=\"quakeContainer\">\n          <h1>Earthquakes from the past week: </h1>\n          {this.state.loading ? <span>Data Is Loading ...</span> : <QuakesList quakes={this.state.quakes}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}