{"ast":null,"code":"import _classCallCheck from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminpahlavani/Documents/General Assembly/WDI/Week7/Labs/02:06:2019/react-geo-quakes/src/MapContainer/index.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nvar mapStyles = {\n  height: '100%',\n  width: '40%',\n  position: \"relative\"\n};\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this));\n\n    _this.onMarkerClick = function (props, marker, place) {\n      // onMarkerClick = (index, place, marker, props) => {\n      console.log(place, 'place');\n      console.log(index, 'index');\n      console.log(marker, 'marker');\n      console.log(props, 'props'); // console.log(quake.properties.place, 'quake is');\n\n      _this.setState({\n        showingInfoWindow: true,\n        activeMarker: marker,\n        selectedPlace: props\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var google = this.props.google;\n      var quakesList = this.props.quakes.features.map(function (quake, i) {\n        return React.createElement(Marker, {\n          key: i,\n          position: {\n            lat: quake.geometry.coordinates[1],\n            lng: quake.geometry.coordinates[0]\n          },\n          icon: {\n            url: \"/images/earthquake.png\",\n            scaledSize: new google.maps.Size(32, 32)\n          },\n          onClick: _this2.onMarkerClick.bind(null, quake.properties.place) // onClick={this.setState.selectedPlace.bind(null, i)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Map, {\n        google: this.props.google,\n        zoom: 8,\n        style: mapStyles,\n        initialCenter: {\n          lat: 30.2682,\n          lng: -97.74295\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, quakesList, React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBHLett8djBo62dDXj0EjCimF8Rd6E8cxg'\n})(MapContainer);","map":{"version":3,"sources":["/Users/aminpahlavani/Documents/General Assembly/WDI/Week7/Labs/02:06:2019/react-geo-quakes/src/MapContainer/index.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","InfoWindow","mapStyles","height","width","position","MapContainer","onMarkerClick","props","marker","place","console","log","index","setState","showingInfoWindow","activeMarker","selectedPlace","onClose","state","google","quakesList","quakes","features","map","quake","i","lat","geometry","coordinates","lng","url","scaledSize","maps","Size","bind","properties","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Map, GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\n\nconst mapStyles = {\n    height: '100%',\n    width:'40%',\n    position:\"relative\"\n}\n\nexport class MapContainer extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n  onMarkerClick = (props, marker, place) => {\n    // onMarkerClick = (index, place, marker, props) => {\n        console.log(place, 'place');\n        console.log(index, 'index');\n        console.log(marker, 'marker');\n        console.log(props, 'props');\n        // console.log(quake.properties.place, 'quake is');\n        this.setState({\n            showingInfoWindow: true,\n            activeMarker: marker,\n            selectedPlace: props\n        })\n    }\n\n    onClose = props => {\n        if(this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n       \n\n\n    render(){\n\n        const {google} = this.props;\n      \n        const quakesList = this.props.quakes.features.map((quake, i) => {\n            return(\n                <Marker key={i} \n                position={{lat:quake.geometry.coordinates[1], lng:quake.geometry.coordinates[0]}}\n                icon={{url: \"/images/earthquake.png\", \n                scaledSize: new google.maps.Size(32,32)}}\n                onClick={this.onMarkerClick.bind(null, quake.properties.place)}\n                // onClick={this.setState.selectedPlace.bind(null, i)}\n                />\n            )\n        });\n\n        return(\n            \n            <Map\n                google={this.props.google}\n                zoom={8}\n                style={mapStyles}\n                initialCenter={{\n                    lat: 30.2682, \n                    lng: -97.74295\n                }}\n            >\n         \n                {quakesList}\n\n                <InfoWindow \n                    marker={this.state.activeMarker} \n                    visible={this.state.showingInfoWindow}\n                    onClose={this.onClose}\n                >\n                    <div>\n                        <h4>{this.state.selectedPlace.name}</h4>\n                    </div>\n                </InfoWindow>\n            </Map>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBHLett8djBo62dDXj0EjCimF8Rd6E8cxg'\n})(MapContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}